package CircularQueue;

import java.util.Scanner;

public class Circular_queue {
	private int front;
	private int rear;
	private int arr[];
	private int size;
	Scanner sc= new Scanner(System.in);
	
	public Circular_queue() {
		front=-1;
		rear=-1;
		
		System.out.println("Enter size of queue :- ");
		size = sc.nextInt();
		
		arr = new int[size];
	}
	
	public boolean isfull() {
		if(front == -1 && rear == size-1) {
			return true ;
		}else if(front == (rear+1)%size){
			return true;
		}else {
			
			return false;
		}
	}
	public boolean isEmpty() {
		if(front == rear) {
			return false;
		}else {
			return true;
		}
	}
	public void enque(int value) {
		if(!isfull()) {
			
			rear = (rear+1)%size;
			arr[rear] = value;
			
		}else {
			System.out.println("queue overflow.....");
		}
	}
	public int deque() {
		int num;
		
		if(isEmpty()) {
			front = (front+1)%size;
			num = arr[front];
		}else {
			System.out.println("queue is empty. ");
			num = -1;
		}
		return num;
	}
	public void display() {
		int i;
		if(isEmpty()) {
			System.out.println("queue is empty...");
		}else {
			for(i=1; i!=rear; i=(i+1)%size){
				System.out.println(arr[i]);
			}
			System.out.println(arr[i]);
		}
	}
	
}  // class Circular_queue
package CircularQueue;

import java.util.Scanner;

public class Circular_queue {
	private int front;
	private int rear;
	private int arr[];
	private int size;
	Scanner sc= new Scanner(System.in);
	
	public Circular_queue() {
		front=-1;
		rear=-1;
		
		System.out.println("Enter size of queue :- ");
		size = sc.nextInt();
		
		arr = new int[size];
	}
	
	public boolean isfull() {
		if(front == -1 && rear == size-1) {
			return true ;
		}else if(front == (rear+1)%size){
			return true;
		}else {
			
			return false;
		}
	}
	public boolean isEmpty() {
		if(front == rear) {
			return false;
		}else {
			return true;
		}
	}
	public void enque(int value) {
		if(!isfull()) {
			
			rear = (rear+1)%size;
			arr[rear] = value;
			
		}else {
			System.out.println("queue overflow.....");
		}
	}
	public int deque() {
		int num;
		
		if(isEmpty()) {
			front = (front+1)%size;
			num = arr[front];
		}else {
			System.out.println("queue is empty. ");
			num = -1;
		}
		return num;
	}
	public void display() {
		int i;
		if(isEmpty()) {
			System.out.println("queue is empty...");
		}else {
			for(i=1; i!=rear; i=(i+1)%size){
				System.out.println(arr[i]);
			}
			System.out.println(arr[i]);
		}
	}
	
}  // class Circular_queue


***********************************************************************************************************************************************************************************************************************************************************



package CircularQueue;

import java.util.Scanner;

public class CirculatQueueMain {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		Circular_queue cq = new Circular_queue();
		int option=0, value;
		do {
			System.out.println("1:EnQueue"+"\n2:DeQueue"+"\n3:Display"+"\n0:EXIT");
			System.out.println("Enter your choice: ");
			option = sc.nextInt();
			
			switch(option) {
			case 1:
				System.out.println("Enter value to insert");
				value = sc.nextInt();
				cq.enque(value);
				break;
			case 2:
				value = cq.deque();
				if(value !=0 ) {
					System.out.println("Dequeued value"+value);
				}
				break;
			case 3:
				cq.display();
				break;
			case 0:
				System.exit(0);
				break;
			}
			
		}while(option != 0);
	}

}
